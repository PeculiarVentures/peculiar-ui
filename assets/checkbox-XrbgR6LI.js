import{j as s}from"./jsx-runtime-xF634gn_.js";import{r as g}from"./index-C-7etoUd.js";import{n as m,i as x}from"./emotion-styled.browser.esm-4GIPFSzo.js";import{C as w}from"./check_icon-DiOFLOkP.js";import{u as I}from"./use_id-Bg_loyUk.js";import{M as q}from"./minus_icon-DkLRarBx.js";import{l as p,d as u}from"./opacity-DTkQBWRE.js";const V=m("label")({display:"inline-flex",width:"var(--pv-size-base-4)",height:"var(--pv-size-base-4)",position:"relative",flexShrink:0}),T=m("input",{shouldForwardProp:e=>x(e)&&e!=="color"})({width:"100%",height:"100%",margin:0,padding:0,outline:0,borderRadius:"4px",borderWidth:"2px",borderStyle:"solid",appearance:"none",borderColor:"currentColor",backgroundColor:"transparent","&:before":{top:"-7px",left:"-7px",right:"-7px",bottom:"-7px",content:'""',position:"absolute",borderRadius:"50%",opacity:0,backgroundColor:"currentColor",transition:"opacity 200ms"}},e=>{const d=e.theme.mode==="dark";let t="var(--pv-color-gray-9)",r=`var(--pv-color-${e.color}-shade-1)`,a=`var(--pv-color-${e.color})`,o="var(--pv-color-gray-7)",n="var(--pv-color-white)",i=p.switch.hover,l=p.switch.focus,c=p.switch.active;return d&&(t="var(--pv-color-gray-7)",r=`var(--pv-color-${e.color})`,a=`var(--pv-color-${e.color}-tint-1)`,o="var(--pv-color-gray-5)",n="var(--pv-color-gray-8)",i=u.switch.hover,l=u.switch.focus,c=u.switch.active),{color:t,'&:checked, &[data-indeterminate="true"]':{"+ [aria-hidden]":{opacity:1}},"&:not(:disabled)":{cursor:"pointer",'&:checked, &[data-indeterminate="true"]':{color:r,backgroundColor:a,"+ [aria-hidden]":{color:"var(--pv-color-white)"}},"&:hover":{"&:before":{opacity:i}},"&:focus-visible":{"&:before":{opacity:l}},"&:active":{"&:before":{opacity:c}}},"&:disabled":{cursor:"not-allowed",color:"var(--pv-color-gray-6)",'&:checked, &[data-indeterminate="true"]':{color:o,backgroundColor:"var(--pv-color-gray-6)","+ [aria-hidden]":{color:n}}}}}),E=m("svg")({display:"block",position:"absolute",top:0,left:0,width:"100%",height:"100%",opacity:0,pointerEvents:"none"}),h=g.forwardRef((e,d)=>{const{checked:t,defaultChecked:r,color:a="primary",indeterminate:o=!1,required:n,inputProps:i,disabled:l,id:c,name:b,checkedIcon:v=w,onChange:y,...k}=e,f=I(c),C=o?q:v;return s.jsxs(V,{ref:d,htmlFor:f,...k,children:[s.jsx(T,{...i,"data-indeterminate":o,type:"checkbox",name:b,id:f,checked:t,defaultChecked:r,required:n,disabled:l,color:a,onChange:y}),s.jsx(E,{as:C,"aria-hidden":!0})]})});h.displayName="Checkbox";try{h.displayName="Checkbox",h.__docgenInfo={description:"",displayName:"Checkbox",props:{checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"If `true`, the component is checked by default.",name:"defaultChecked",required:!1,type:{name:"boolean"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},indeterminate:{defaultValue:null,description:"If `true`, the component appears indeterminate. This does not set the native\ninput element to indeterminate due to inconsistent behavior across browsers.",name:"indeterminate",required:!1,type:{name:"boolean"}},inputProps:{defaultValue:null,description:"Attributes applied to the input element.",name:"inputProps",required:!1,type:{name:'Omit<InputHTMLAttributes<HTMLInputElement>, "className" | "type">'}},className:{defaultValue:null,description:"The content of the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"If `true`, the checkbox will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The `id` of the input element.",name:"id",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"If `true`, the `input` element will be required.",name:"required",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},checkedIcon:{defaultValue:null,description:"The icon to display when the component is checked.",name:"checkedIcon",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}}}}}catch{}export{h as C};
