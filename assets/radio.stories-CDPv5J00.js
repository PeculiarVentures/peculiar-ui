import{j as u}from"./jsx-runtime-Du8NFWEI.js";import{r as x}from"./index-Dl6G-zuu.js";import{n as f,i as I}from"./emotion-styled.browser.esm-Cx145QRj.js";import{u as q}from"./use_id-C1Yisc_V.js";import{D as R}from"./dot_icon-Dicr9oXG.js";import{l as m,d as h}from"./opacity-DTkQBWRE.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-L5l4RKBO.js";import"./emotion-element-c39617d8.browser.esm-DM69r4Qw.js";const V=f("label")({cursor:"pointer",display:"inline-flex",width:"var(--pv-size-base-4)",height:"var(--pv-size-base-4)",borderRadius:"50%",position:"relative",flexShrink:0},e=>({...e.theme.mode==="dark"?{color:"var(--pv-color-gray-5)"}:{color:"var(--pv-color-gray-6)"}})),P=f("input",{shouldForwardProp:e=>I(e)&&e!=="color"})({cursor:"inherit",width:"100%",height:"100%",margin:0,padding:0,outline:0,borderRadius:"50%",borderWidth:"2px",borderStyle:"solid",appearance:"none",borderColor:"currentColor",backgroundColor:"transparent","&:before":{top:"-7px",left:"-7px",right:"-7px",bottom:"-7px",content:'""',position:"absolute",borderRadius:"50%",opacity:0,backgroundColor:"currentColor",transition:"opacity 200ms"}},e=>{const p=e.theme.mode==="dark";let a="var(--pv-color-gray-9)",t=`var(--pv-color-${e.color}-shade-1)`,i=`var(--pv-color-${e.color})`,o="var(--pv-color-gray-6)",l="var(--pv-color-gray-7)",n=m.switch.hover,c=m.switch.focus,d=m.switch.active;return p&&(a="var(--pv-color-gray-7)",t=`var(--pv-color-${e.color})`,i=`var(--pv-color-${e.color}-tint-1)`,o="var(--pv-color-gray-5)",o="var(--pv-color-gray-5)",l="var(--pv-color-gray-5)",n=h.switch.hover,c=h.switch.focus,d=h.switch.active),{color:a,"&:checked":{"+ [aria-hidden]":{color:i,opacity:1}},"&:not(:disabled)":{cursor:"pointer","&:checked":{color:t},"&:hover":{"&:before":{opacity:n}},"&:focus-visible":{"&:before":{opacity:c}},"&:active":{"&:before":{opacity:d}}},"&:disabled":{cursor:"not-allowed","+ [aria-hidden]":{color:"inherit"},color:o,"&:checked":{color:l}}}}),_=f("svg")({display:"block",position:"absolute",top:0,left:0,width:"100%",height:"100%",opacity:0,pointerEvents:"none"}),r=x.forwardRef((e,p)=>{const{checked:a,defaultChecked:t,color:i="primary",required:o,inputProps:l,disabled:n,id:c,name:d,checkedIcon:k=R,onChange:C,...w}=e,y=q(c);return u.jsxs(V,{ref:p,htmlFor:y,...w,children:[u.jsx(P,{...l,type:"radio",name:d,id:y,checked:a,defaultChecked:t,required:o,disabled:n,color:i,onChange:C}),u.jsx(_,{as:k,"aria-hidden":!0})]})});r.displayName="Radio";r.defaultProps={color:"primary"};try{r.displayName="Radio",r.__docgenInfo={description:"",displayName:"Radio",props:{checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"If `true`, the component is checked by default.",name:"defaultChecked",required:!1,type:{name:"boolean"}},color:{defaultValue:{value:"primary"},description:"The color of the component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},inputProps:{defaultValue:null,description:"Attributes applied to the input element.",name:"inputProps",required:!1,type:{name:'Omit<InputHTMLAttributes<HTMLInputElement>, "className" | "type">'}},className:{defaultValue:null,description:"The content of the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"If `true`, the radio will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The `id` of the input element.",name:"id",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"If `true`, the `input` element will be required.",name:"required",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},checkedIcon:{defaultValue:null,description:"The icon to display when the component is checked.",name:"checkedIcon",required:!1,type:{name:"ElementType<any>"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}}}}}catch{}const A={title:"Components/Radio",component:r,tags:["autodocs"],argTypes:{inputProps:{control:!1},checkedIcon:{control:!1}}},s={};var v,b,g;s.parameters={...s.parameters,docs:{...(v=s.parameters)==null?void 0:v.docs,source:{originalSource:"{}",...(g=(b=s.parameters)==null?void 0:b.docs)==null?void 0:g.source}}};const F=["Playground"];export{s as Playground,F as __namedExportsOrder,A as default};
