import{j as a}from"./jsx-runtime-CQsLhzk5.js";import{r as w}from"./index-Wp2u197Z.js";import{n as f}from"./emotion-styled.browser.esm-C7XpMTT7.js";import{u as I}from"./use_id-BweIgYmC.js";import{T as h}from"./typography-eusGYDsR.js";const k=f(h)(e=>({fontFamily:"inherit",outline:"none",boxSizing:"border-box",width:"100%",borderRadius:"4px",padding:"0 var(--pv-size-base-2)",backgroundColor:"var(--pv-color-gray-1)",borderStyle:"solid",borderWidth:"1px",transition:"background-color 200ms, color 200ms, border-color 200ms",display:"inline-flex",appearance:"none",...e.size==="small"&&{height:"var(--pv-size-base-6)"},...e.size==="medium"&&{height:"var(--pv-size-base-7)"},...e.size==="large"&&{height:"var(--pv-size-base-8)"}}),e=>{const l=e.theme.mode==="dark",o=l?"var(--pv-color-white)":"var(--pv-color-black)";let r="var(--pv-color-gray-8)",t="var(--pv-color-gray-9)",n="var(--pv-color-gray-7)",i="var(--pv-color-gray-5)",d="var(--pv-color-gray-7)",u="var(--pv-color-wrong-tint-5)",s="var(--pv-color-wrong-tint-3)",p="var(--pv-color-secondary-tint-5)",c="var(--pv-color-secondary-tint-3)";return l&&(r="var(--pv-color-gray-5)",t="var(--pv-color-gray-6)",n="var(--pv-color-gray-4)",i="var(--pv-color-gray-4)",d="var(--pv-color-gray-4)",u="var(--pv-color-wrong-shade-4)",s="var(--pv-color-wrong-shade-1)",p="var(--pv-color-secondary-shade-4)",c="var(--pv-color-secondary-shade-1)"),{color:o,borderColor:r,"&::placeholder":{color:t},"&:hover":{backgroundColor:"var(--pv-color-gray-3)",borderColor:n},"&:disabled":{cursor:"not-allowed",backgroundColor:"var(--pv-color-gray-1)",borderColor:i,color:d},"&:not(:disabled)":{"&[aria-invalid]":{backgroundColor:u,borderColor:s},"&:focus-visible":{backgroundColor:p,borderColor:c}}}}),z=f("label")({label:"TextField-label",marginBottom:"2px",display:"inline-block"}),_=f(h)({marginTop:"2px"}),v=w.forwardRef((e,l)=>{const{size:o,label:r,inputProps:t={},disabled:n,defaultValue:i,id:d,value:u,placeholder:s,required:p,name:c,inputRef:y,error:b,errorText:g,autoFocus:T,readOnly:x,type:q="text",onChange:C,...V}=e,m=I(d),F=r&&m?`${m}-label`:void 0;return a.jsxs("div",{ref:l,...V,children:[r&&a.jsx(z,{htmlFor:m,id:F,children:a.jsx(h,{component:"span",variant:"c2",color:"gray-10",children:r})}),a.jsx(k,{...t,component:"input",variant:o==="small"?"c1":"b3",size:o,type:q,disabled:n,defaultValue:i,id:m,value:u,required:p,name:c,ref:y,autoFocus:T,"aria-invalid":b||void 0,onChange:C,placeholder:s,readOnly:x}),b&&g&&a.jsx(_,{variant:"c2",color:"wrong",children:g})]})});v.displayName="TextField";v.defaultProps={disabled:!1,size:"medium"};try{v.displayName="TextField",v.__docgenInfo={description:"",displayName:"TextField",props:{disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"medium"},description:"The size of the input.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},className:{defaultValue:null,description:"The className of the component.",name:"className",required:!1,type:{name:"string"}},inputProps:{defaultValue:null,description:"Attributes applied to the `input` element.",name:"inputProps",required:!1,type:{name:"InputHTMLAttributes<HTMLInputElement>"}},defaultValue:{defaultValue:null,description:"The default value. Use when the component is not controlled.",name:"defaultValue",required:!1,type:{name:"string | (string & readonly string[])"}},id:{defaultValue:null,description:"The id of the `input` element.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"The label content.",name:"label",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The value of the `input` element, required for a controlled component.",name:"value",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"The short hint displayed in the `input` before the user enters a value.",name:"placeholder",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.",name:"inputRef",required:!1,type:{name:"ForwardedRef<HTMLInputElement>"}},autoFocus:{defaultValue:null,description:"If `true`, the `input` element is focused during the first mount.",name:"autoFocus",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"If `true`, the `input` will indicate an error.",name:"error",required:!1,type:{name:"boolean"}},errorText:{defaultValue:null,description:"",name:"errorText",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:`It prevents the user from changing the value of
the field (not from interacting with the field).`,name:"readOnly",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"Type of the `input` element.",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},onChange:{defaultValue:null,description:"Callback fired when the value is changed.",name:"onChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}}}}}catch{}export{v as T};
