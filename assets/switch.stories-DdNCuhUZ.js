import{j as c}from"./jsx-runtime-DtaoT6pD.js";import{r as k}from"./index-OjgoNOWw.js";import{n as s,i as C}from"./emotion-styled.browser.esm-jsqElTi7.js";import{B as w}from"./box-8ACzNvof.js";import{u as x}from"./use_id-vDNgflVU.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-xK8HOd_o.js";import"./emotion-element-c39617d8.browser.esm-upVMHClS.js";const S=s("label")({display:"inline-flex",width:"var(--pv-size-base-7)",height:"var(--pv-size-base-4)",borderRadius:"var(--pv-size-base-4)",justifyContent:"center",position:"relative",alignItems:"center"}),q=s("input",{shouldForwardProp:e=>C(e)&&e!=="color"})({label:"Switch-input",overflow:"hidden",width:"100%",height:"100%",margin:0,padding:0,outline:0,borderRadius:"inherit",appearance:"none",backgroundColor:"var(--pv-color-gray-6)"},e=>{const d=e.theme.mode==="dark";let a=`var(--pv-color-${e.color})`,t="var(--pv-color-gray-3)",r="var(--pv-color-gray-3)",n="var(--pv-color-gray-1)",i=`var(--pv-color-${e.color}-tint-3)`;return d&&(a=`var(--pv-color-${e.color}-tint-1)`,t="var(--pv-color-gray-9)",r="var(--pv-color-gray-6)",n="var(--pv-color-gray-7)",i=`var(--pv-color-${e.color}-shade-3)`),{"&:checked":{backgroundColor:a,"+ [aria-hidden]":{transform:"translateX(calc(50% - 2px))","&:before":{backgroundColor:`var(--pv-color-${e.color}-shade-2)`}}},"&:disabled":{cursor:"not-allowed",pointerEvents:"none",backgroundColor:"var(--pv-color-gray-4)","+ [aria-hidden]":{borderColor:r,backgroundColor:n},"&:checked":{backgroundColor:i}},"&:not(:disabled)":{cursor:"pointer","+ [aria-hidden]":{borderColor:t},"&:hover":{"+ [aria-hidden]:before":{opacity:.18}},"&:focus-visible":{"+ [aria-hidden]:before":{opacity:.23}},"&:active":{"+ [aria-hidden]:before":{opacity:.3}}}}}),I=s(w)({display:"block",position:"absolute",width:"var(--pv-size-base-3)",height:"var(--pv-size-base-3)",transition:"transform 200ms",boxShadow:"var(--pv-shadow-light-low)",transform:"translateX(calc(-50% + 2px))",pointerEvents:"none",boxSizing:"content-box","&:before":{top:"-10px",left:"-10px",right:"-10px",bottom:"-10px",content:'""',position:"absolute",borderRadius:"50%",opacity:0,backgroundColor:"var(--pv-color-gray-9)",transition:"opacity 200ms, background-color 200ms"}}),o=k.forwardRef((e,d)=>{const{checked:a,defaultChecked:t,color:r="primary",required:n,inputProps:i,disabled:b,id:f,name:v,onChange:g,...y}=e,p=x(f);return c.jsxs(S,{ref:d,htmlFor:p,...y,children:[c.jsx(q,{...i,type:"checkbox",name:v,id:p,checked:a,defaultChecked:t,required:n,disabled:b,color:r,onChange:g}),c.jsx(I,{"aria-hidden":!0,background:`${r}-contrast`,borderWidth:1,borderStyle:"solid",borderRadius:100})]})});o.displayName="Switch";o.defaultProps={color:"primary"};try{o.displayName="Switch",o.__docgenInfo={description:"",displayName:"Switch",props:{checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"If `true`, the component is checked by default.",name:"defaultChecked",required:!1,type:{name:"boolean"}},color:{defaultValue:{value:"primary"},description:"The color of the component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},inputProps:{defaultValue:null,description:"Attributes applied to the input element.",name:"inputProps",required:!1,type:{name:'Omit<InputHTMLAttributes<HTMLInputElement>, "className" | "type">'}},className:{defaultValue:null,description:"The content of the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"If `true`, the Switch will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The `id` of the input element.",name:"id",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"If `true`, the `input` element will be required.",name:"required",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}}}}}catch{}const j={title:"Components/Switch",component:o,tags:["autodocs"],argTypes:{inputProps:{control:!1}}},l={};var u,m,h;l.parameters={...l.parameters,docs:{...(u=l.parameters)==null?void 0:u.docs,source:{originalSource:"{}",...(h=(m=l.parameters)==null?void 0:m.docs)==null?void 0:h.source}}};const z=["Playground"];export{l as Playground,z as __namedExportsOrder,j as default};
