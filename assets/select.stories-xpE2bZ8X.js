import{j as e}from"./jsx-runtime-CQsLhzk5.js";import{n as a}from"./emotion-styled.browser.esm-C7XpMTT7.js";import{T as i}from"./typography-CSDQkA0z.js";import{A as se}from"./arrow_drop_down_icon-BguqUiCn.js";import{M as de}from"./menu_item--TAxdtwU.js";import{P as pe}from"./popover-_uP8TWCW.js";import{C as ue}from"./chip-2zjN53J9.js";import{T as ce}from"./text_field-B7X6sf9G.js";import{B as me}from"./button-CnWlfr2K.js";import{u as ye}from"./use_autocomplete-DiP0aKwD.js";import{B as j}from"./box-BFgaEr0T.js";import{P as he}from"./plus_icon-DpOJT4Y-.js";import"./index-Wp2u197Z.js";import"./emotion-element-c39617d8.browser.esm-BF_KrTCf.js";import"./usePopper-DrB3v0g8.js";import"./index-DA8gG4lw.js";import"./modal-NLg_IA5a.js";import"./portal-BQAxhhmg.js";import"./use_enhanced_effect-C1-U52iU.js";import"./fade-Cuc5mZJ8.js";import"./use_merged_ref-ClS6-mGQ.js";import"./Transition-CwNB1HnW.js";import"./close_small_icon-Di9ug5Cm.js";import"./use_id-BweIgYmC.js";import"./button_base-D78nZ2fA.js";import"./use_controllable-DRJrQW8S.js";const ge=a(i)(r=>({outline:"none",boxSizing:"border-box",width:"100%",borderRadius:"4px",padding:"0 calc(var(--pv-size-base-2) + 24px) 0 var(--pv-size-base-2)",backgroundColor:"var(--pv-color-gray-1)",borderStyle:"solid",borderWidth:"1px",transition:"background-color 200ms, color 200ms, border-color 200ms",appearance:"none",userSelect:"none",textAlign:"left",cursor:"pointer",fontFamily:"inherit",height:"var(--pv-size-base-8)",position:"relative",...r.size==="small"&&{height:"var(--pv-size-base-6)"},...r.size==="medium"&&{height:"var(--pv-size-base-7)"},...r.multiple===!0&&{display:"inline-flex",alignItems:"center"}}),r=>{const y=r.theme.mode==="dark",u=y?"var(--pv-color-white)":"var(--pv-color-black)";let h="var(--pv-color-gray-8)",c="var(--pv-color-gray-9)";const b="var(--pv-color-gray-10)";let n="var(--pv-color-gray-5)",s="var(--pv-color-gray-7)";const d="var(--pv-color-wrong)",m="var(--pv-color-secondary)";return y&&(h="var(--pv-color-gray-5)",c="var(--pv-color-gray-6)",n="var(--pv-color-gray-4)",s="var(--pv-color-gray-4)"),{borderColor:h,"&:hover":{borderColor:b},"&:disabled":{cursor:"not-allowed",borderColor:n,color:s},"&:not(:disabled)":{color:u,"&[aria-placeholder]":{color:c},"&[aria-invalid]":{borderColor:d},"&:focus-visible":{borderColor:m}}}}),fe=a(se)({position:"absolute",right:"0px",top:"calc(50% - 12px)",margin:"0px var(--pv-size-base)",color:"var(--pv-color-gray-10)",'&[aria-disabled="true"]':{color:"inherit"}}),ve=a("input")({bottom:0,left:0,height:"100%",position:"absolute",opacity:0,pointerEvents:"none",width:"100%",boxSizing:"border-box"}),z=a("div")({padding:"var(--pv-size-base-3) var(--pv-size-base-2)"}),be=a("ul")({maxHeight:"36vh",overflowY:"auto",margin:0,listStyleType:"none",position:"relative",padding:"10px 0"}),Te=a(i)(r=>({padding:"var(--pv-size-base-2)",color:r.theme.mode==="dark"?"var(--pv-color-gray-6)":"var(--pv-color-gray-9)"})),xe=a("ul")({padding:0,listStyleType:"none"}),Se=a(de)(r=>({...r.inGroup&&{padding:"0px var(--pv-size-base-2) 0 var(--pv-size-base-3)"}})),we=a(pe)({minWidth:240}),Ce=a("div")({overflow:"hidden",width:"100%",display:"grid",gridTemplateColumns:"repeat(auto-fit, minmax(0, max-content))",gap:"var(--pv-size-base)"}),Ve=a(ue)(r=>({label:"Select-tag",borderRadius:"3px",margin:0,...r.size==="small"&&{height:"var(--pv-size-base-5)"}})),Oe=a(i)({margin:"0 var(--pv-size-base-2)"}),qe=a(ce)({padding:"var(--pv-size-base-3) var(--pv-size-base-3) var(--pv-size-base-2)"}),Ie=a(me)({width:"100%",borderRadius:0,justifyContent:"left",padding:"0px var(--pv-size-base-2)"}),Pe=a(i)({marginTop:"2px"}),Le=a("label")({label:"TextField-label",marginBottom:"2px",display:"inline-block"}),v=r=>{const{className:y,size:u,placeholder:h,label:c,disableSearch:b,disabled:n=!1,noOptionsText:s,loading:d,loadingText:m,limitTags:T=2,name:N,required:M,multiple:G=!1,readOnly:F,createOptionText:W,allowCreateOption:_,error:V,errorText:O,renderRoot:K,renderOption:U,getLimitTagsText:H=t=>`${t} more`,groupBy:q,onCreate:I}=r,{id:J,value:o,searchValue:x,groupedOptions:g,getRootProps:X,getInputLabelProps:Y,getInputProps:$,getListboxProps:Q,getOptionProps:Z,getPopoverProps:ee,getTagProps:P,getOptionLabel:S}=ye(r),{onChange:te,...L}=$(),A=ee(),re=t=>{I&&I(t,x),A.onClose(t)},ae=(t,l)=>e.jsx(Se,{...t,inGroup:!!q,children:S(l)}),oe=t=>e.jsxs("li",{children:[e.jsx(Te,{variant:"c1",color:"gray-10",children:t.group}),e.jsx(xe,{children:t.children})]},t.key),k=(()=>{if(!o||Array.isArray(o)&&o.length===0)return null;if(Array.isArray(o)){const t=o.length>T?o.length-T:0,l=t>0?o.slice(0,T):o;return e.jsxs(e.Fragment,{children:[e.jsx(Ce,{children:l.map((p,C)=>e.jsx(Ve,{...P(p,C),color:"secondary",variant:"contained",size:u,children:S(p)}))}),!!t&&e.jsx(Oe,{variant:"c2",color:"gray-9",children:H(t)})]})}return S(o)})(),w=k===null,le=(t,l)=>e.jsxs(ge,{...t,noWrap:!0,component:"button",type:"button",variant:u==="small"?"c1":"b3","aria-invalid":V||void 0,"aria-placeholder":w||void 0,multiple:G,size:u,children:[w?h:k,e.jsx(fe,{"aria-disabled":n,"aria-hidden":!0}),e.jsx(ve,{type:"text",value:w?"":JSON.stringify(l),tabIndex:-1,"aria-hidden":"true",disabled:n,autoComplete:"off",id:J,name:N,required:M,readOnly:F,onChange:()=>{}})]}),ie=U||ae,ne=K||le,R=(t,l)=>{const p=Z(t,l);return ie(p,t)};return e.jsxs("div",{className:y,children:[c&&e.jsx(Le,{...Y(),children:e.jsx(i,{component:"span",variant:"c2",color:"gray-10",children:c})}),ne({...X(),disabled:n},o,P),V&&O&&e.jsx(Pe,{variant:"c2",color:"wrong",children:O}),e.jsxs(we,{placement:"bottom-start",allowUseSameWidth:!0,...A,children:[!b&&e.jsx(j,{borderColor:"gray-3",borderPosition:"bottom",borderStyle:"solid",borderWidth:1,children:e.jsx(qe,{id:L.id,inputProps:L,onChange:te,placeholder:"Search",disabled:d})}),d&&g.length===0&&e.jsx(z,{children:typeof m=="string"?e.jsx(i,{variant:"b2",color:"gray-10",children:m}):m}),g.length===0&&!d&&e.jsx(z,{children:typeof s=="string"?e.jsx(i,{variant:"b2",color:"gray-10",children:s}):s}),g.length>0&&e.jsx(be,{...Q(),children:g.map((t,l)=>q&&"options"in t?oe({key:t.key,group:t.group,children:t.options.map((p,C)=>R(p,t.index+C))}):R(t,l))}),_&&x.length>0&&!d&&e.jsx(j,{borderColor:"gray-3",borderPosition:"top",borderStyle:"solid",borderWidth:1,children:e.jsx(Ie,{color:"secondary",textVariant:"b3",onClick:re,startIcon:e.jsx(he,{}),children:W.replace("{{value}}",x)})})]})]})};v.defaultProps={disableSearch:!1,noOptionsText:"No options",loading:!1,loadingText:"Loading...",limitTags:2,required:!1,allowCreateOption:!1,createOptionText:'Create "{{value}}"',size:"medium"};try{v.displayName="Select",v.__docgenInfo={description:"",displayName:"Select",props:{id:{defaultValue:null,description:`This prop is used to help implement the accessibility logic.
If you don't provide an id it will fall back to a randomly generated one.`,name:"id",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Array of options.",name:"options",required:!0,type:{name:"readonly T[]"}},defaultValue:{defaultValue:null,description:"The default value. Use when the component is not controlled.",name:"defaultValue",required:!1,type:{name:"AutocompleteValue<T, Multiple>"}},value:{defaultValue:null,description:"The value of the select.",name:"value",required:!1,type:{name:"AutocompleteValue<T, Multiple>"}},disableCloseOnSelect:{defaultValue:null,description:"If `true`, the popup won't close when a value is selected.",name:"disableCloseOnSelect",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"If `true`, `value` must be an array and the menu will support multiple selections.",name:"multiple",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:`It prevents the user from changing the value of
the field (not from interacting with the field).`,name:"readOnly",required:!1,type:{name:"boolean"}},popoverProps:{defaultValue:null,description:"Props applied to the `Popover` element.",name:"popoverProps",required:!1,type:{name:'Omit<HTMLAttributes<HTMLDivElement>, "children">'}},groupBy:{defaultValue:null,description:"If provided, the options will be grouped under the returned string.",name:"groupBy",required:!1,type:{name:"(option: T) => string"}},getOptionLabel:{defaultValue:null,description:"Used to determine the string value for a given option. It's used to fill the input.",name:"getOptionLabel",required:!1,type:{name:"(option: T) => string"}},getOptionKey:{defaultValue:null,description:"Used to determine the key value for a given option.",name:"getOptionKey",required:!1,type:{name:"(option: T) => string"}},filterOptions:{defaultValue:null,description:"A filter function that determines the options that are eligible.",name:"filterOptions",required:!1,type:{name:"AutocompleteFilterOptionsType<T, Multiple>"}},onClose:{defaultValue:null,description:"Callback fired when the popup requests to be closed.",name:"onClose",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>) => void"}},onOpen:{defaultValue:null,description:"Callback fired when the popup requests to be opened.",name:"onOpen",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>) => void"}},onChange:{defaultValue:null,description:"Callback fired when the value changes.",name:"onChange",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, value: AutocompleteValue<T, Multiple>, details: AutocompleteChangeDetails<T>, reason: AutocompleteChangeReason) => void"}},onInputChange:{defaultValue:null,description:"Callback fired when the input value changes.",name:"onInputChange",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, value: string) => void"}},className:{defaultValue:null,description:"The className of the component.",name:"className",required:!1,type:{name:"string"}},size:{defaultValue:{value:"medium"},description:"The size of the root component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},placeholder:{defaultValue:null,description:"The short hint displayed in the `input` before the user enters a value.",name:"placeholder",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"The label content.",name:"label",required:!1,type:{name:"string"}},noOptionsText:{defaultValue:{value:"No options"},description:"Text to display when there are no options.",name:"noOptionsText",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:{value:"false"},description:"If `true`, the component is in a loading state.\nThis shows the `loadingText` in place of suggestions (only if there are no\nsuggestions to show, e.g. `options` are empty).",name:"loading",required:!1,type:{name:"boolean"}},loadingText:{defaultValue:{value:"Loading..."},description:"Text to display when in a loading state.",name:"loadingText",required:!1,type:{name:"ReactNode"}},limitTags:{defaultValue:{value:"2"},description:"The maximum number of tags that will be visible when not focused.",name:"limitTags",required:!1,type:{name:"number"}},disableSearch:{defaultValue:{value:"false"},description:"If `true`, the popup search input will be hidden.",name:"disableSearch",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"If `true`, the autocomplete will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},required:{defaultValue:{value:"false"},description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},createOptionText:{defaultValue:{value:'Create "{{value}}"'},description:"Text to display when in the create button element.",name:"createOptionText",required:!1,type:{name:"string"}},allowCreateOption:{defaultValue:{value:"false"},description:"If `true`, the create button element will be shown.",name:"allowCreateOption",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"If `true`, the `input` will indicate an error.",name:"error",required:!1,type:{name:"boolean"}},errorText:{defaultValue:null,description:"",name:"errorText",required:!1,type:{name:"string"}},renderRoot:{defaultValue:null,description:"Render the root element.",name:"renderRoot",required:!1,type:{name:"(props: object, value: AutocompleteValue<T, Multiple>, getTagProps: (option: T, index: number) => { key: number; 'data-tag-index': number; tabIndex: -1; onDelete?: (event: SyntheticEvent<...>) => void; }) => ReactNode"}},renderOption:{defaultValue:null,description:"Render the option, use `getOptionLabel` by default.",name:"renderOption",required:!1,type:{name:"(props: object, option: T) => ReactNode"}},getLimitTagsText:{defaultValue:null,description:"The label to display when the tags are truncated (`limitTags`).",name:"getLimitTagsText",required:!1,type:{name:"(more: number) => string"}},onCreate:{defaultValue:null,description:"Callback fired when the create button clicked.",name:"onCreate",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, value: string) => void"}}}}}catch{}const Ae=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"Léon: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL·E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Amélie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],lt={title:"Components/Select",component:v,args:{options:Ae,placeholder:"Select a movie",getOptionLabel:r=>r.title},tags:["autodocs"],argTypes:{options:{control:!1},getOptionLabel:{control:!1},defaultValue:{control:!1},value:{control:!1},filterOptions:{control:!1},popoverProps:{control:!1}}},f={};var E,D,B;f.parameters={...f.parameters,docs:{...(E=f.parameters)==null?void 0:E.docs,source:{originalSource:"{}",...(B=(D=f.parameters)==null?void 0:D.docs)==null?void 0:B.source}}};const it=["Playground"];export{f as Playground,it as __namedExportsOrder,lt as default};
