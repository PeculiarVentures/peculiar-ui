var v=Object.defineProperty;var h=(t,e,r)=>e in t?v(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var a=(t,e,r)=>(h(t,typeof e!="symbol"?e+"":e,r),r);import{j as l}from"./jsx-runtime-Du8NFWEI.js";import{R as n}from"./index-Dl6G-zuu.js";class f{constructor(){a(this,"mapping");a(this,"observer");this.mapping=new Map}init(){return this.observer||(this.observer=new IntersectionObserver(e=>{for(const r of e){const s=this.mapping.get(r.target);s&&s(r.isIntersecting)}})),this.observer}assertObserver(){if(!this.observer)throw new Error("You need to initialize the observer before")}add(e,r){this.assertObserver(),this.mapping.set(e,r),this.observer.observe(e)}destroy(){this.assertObserver(),this.mapping.clear(),this.observer.disconnect()}remove(e){this.assertObserver(),this.mapping.delete(e),this.observer.unobserve(e)}}const c=new f;function d(){const t=n.useRef(null),[e,r]=n.useState(!1);return n.useEffect(()=>()=>{t.current&&c.remove(t.current)},[]),[n.useCallback(o=>{o&&(c.init(),t.current=o,c.add(o,r))},[]),{isIntersecting:e}]}const O={title:"Hooks/useIntersectionObserver",component:d},u=t=>{const{title:e}=t,[r,{isIntersecting:s}]=d();return console.log(`Render Section ${e}`,{isIntersecting:s}),l.jsx("div",{ref:r,style:{height:"20vh",display:"flex",border:"1px dashed #000",fontSize:"2rem"},children:l.jsx("div",{style:{margin:"auto"},children:e})})},i=()=>Array.from({length:5}).map((t,e)=>l.jsx(u,{title:`${e+1}`},e));var p,m,b;i.parameters={...i.parameters,docs:{...(p=i.parameters)==null?void 0:p.docs,source:{originalSource:`() => Array.from({
  length: 5
}).map((_, index) => <Section
// eslint-disable-next-line react/no-array-index-key
key={index} title={\`\${index + 1}\`} />)`,...(b=(m=i.parameters)==null?void 0:m.docs)==null?void 0:b.source}}};const I=["DemoExample"];export{i as DemoExample,I as __namedExportsOrder,O as default};
