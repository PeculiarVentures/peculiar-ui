import{j as c}from"./jsx-runtime-CQsLhzk5.js";import{r as d}from"./index-Wp2u197Z.js";import{n as y,i as k}from"./emotion-styled.browser.esm-C7XpMTT7.js";import{T as _}from"./typography-eusGYDsR.js";import"./emotion-element-c39617d8.browser.esm-BF_KrTCf.js";const V=y("div")({whiteSpace:"nowrap",overflowX:"auto"}),h=d.forwardRef((e,r)=>{const{children:l,value:o,onChange:s,...i}=e,n=d.Children.map(l,a=>{if(!d.isValidElement(a))return null;if(a.type.displayName!=="Tab")return console.error("Peculiar-UI: The Tabs component doesn't accept a Element as not a Tab."),null;const m=a.props.id===o;return d.cloneElement(a,{selected:m,onChange:s})});return c.jsx(V,{ref:r,role:"tablist",...i,children:n})});try{h.displayName="Tabs",h.__docgenInfo={description:"",displayName:"Tabs",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:'ReactElement<TabProps, OverridableComponent<TabTypeMap<{}, "button">>>[] & ReactNode'}},value:{defaultValue:null,description:"The value of the currently selected `Tab`.",name:"value",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"The className of the component.",name:"className",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback fired when the value changes.",name:"onChange",required:!1,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>, value: string) => void"}}}}}catch{}const x=y("button",{shouldForwardProp:e=>k(e)&&e!=="color"})(e=>({fontFamily:"inherit",outline:"none",cursor:"pointer",boxSizing:"border-box",border:0,borderBottom:"3px solid transparent",minHeight:"var(--pv-size-base-12)",height:"100%",padding:"0 var(--pv-size-base-3)",backgroundColor:"transparent",transition:"background-color 200ms, color 200ms, border-color 200ms",display:"inline-flex",alignItems:"center",justifyContent:"center",textDecoration:"none",...e.selected&&{borderColor:"var(--pv-color-secondary)"}}),e=>{const r=e.theme.mode==="dark",l=e.color==="white";let o;const s=r?"var(--pv-color-gray-5)":"var(--pv-color-gray-7)";let i="var(--pv-color-secondary-tint-5)",n="var(--pv-color-secondary-tint-4)",a="var(--pv-color-secondary-tint-3)";return l?o="var(--pv-color-gray-9)":r?o="var(--pv-color-gray-7)":o="var(--pv-color-gray-10)",r&&(i="var(--pv-color-secondary-shade-4)",n="var(--pv-color-secondary-shade-3)",a="var(--pv-color-secondary-shade-2)"),e.selected&&(r||l?o="var(--pv-color-white)":o="var(--pv-color-black)"),{"&:disabled":{cursor:"not-allowed",color:s},"&:not(:disabled)":{color:o,"&:hover":{backgroundColor:i},"&:focus-visible":{backgroundColor:n},"&:active":{backgroundColor:a}}}}),t=d.forwardRef((e,r)=>{const{color:l="black",component:o,id:s,disabled:i,selected:n,children:a,onChange:p,...m}=e,g=o||"button",T=C=>{!n&&p&&p(C,s)};return c.jsx(x,{as:g,type:"button",role:"tab",ref:r,disabled:i,id:s,color:l,selected:n,"aria-selected":!!n,onClick:T,...m,children:c.jsx(_,{variant:"s2",component:"span",color:"inherit",children:a})})});t.displayName="Tab";t.defaultProps={disabled:!1,color:"black"};try{t.displayName="Tab",t.__docgenInfo={description:"",displayName:"Tab",props:{component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!0,type:{name:"ElementType<any, keyof IntrinsicElements>"}},children:{defaultValue:null,description:"The content of the component.",name:"children",required:!0,type:{name:"ReactNode"}},id:{defaultValue:null,description:"Unique identifier used to control which tab is selected.",name:"id",required:!0,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the tab will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},color:{defaultValue:{value:"black"},description:"The color of the component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"black"'},{value:'"white"'}]}},onChange:{defaultValue:null,description:"Callback fired when the value changes.",name:"onChange",required:!1,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>, value: string) => void"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"never"}},className:{defaultValue:null,description:"The className of the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"",name:"data-testid",required:!1,type:{name:"string"}}}}}catch{}const M={title:"Components/Tabs",component:h,tags:["autodocs"],args:{children:[c.jsx(t,{id:"home",children:"Home"},"1"),c.jsx(t,{id:"files",children:"Files"},"2"),c.jsx(t,{id:"builds",disabled:!0,children:"Builds"},"3")],value:"home"},argTypes:{children:{control:!1},value:{control:!1}}},u={};var v,f,b;u.parameters={...u.parameters,docs:{...(v=u.parameters)==null?void 0:v.docs,source:{originalSource:"{}",...(b=(f=u.parameters)==null?void 0:f.docs)==null?void 0:b.source}}};const P=["Playground"];export{u as Playground,P as __namedExportsOrder,M as default};
