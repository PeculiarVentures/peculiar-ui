import{j as u}from"./jsx-runtime-DtaoT6pD.js";import{r as C}from"./index-OjgoNOWw.js";import{n as f,i as x}from"./emotion-styled.browser.esm-jsqElTi7.js";import{B as S}from"./box-bq1vF_Hs.js";import{u as q}from"./use_id-vDNgflVU.js";import{l as h,d as m}from"./opacity-VJDgERWe.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-xK8HOd_o.js";import"./emotion-element-c39617d8.browser.esm-upVMHClS.js";const I=f("label")({display:"inline-flex",width:"var(--pv-size-base-7)",height:"var(--pv-size-base-4)",borderRadius:"var(--pv-size-base-4)",justifyContent:"center",position:"relative",alignItems:"center",flexShrink:0}),V=f("input",{shouldForwardProp:e=>x(e)&&e!=="color"})({overflow:"hidden",width:"100%",height:"100%",margin:0,padding:0,outline:0,borderRadius:"inherit",appearance:"none",backgroundColor:"var(--pv-color-gray-6)"},e=>{const p=e.theme.mode==="dark";let a=`var(--pv-color-${e.color})`,t="var(--pv-color-gray-3)",o="var(--pv-color-gray-3)",i="var(--pv-color-gray-1)",n=`var(--pv-color-${e.color}-tint-3)`,l=h.switch.hover,d=h.switch.focus,c=h.switch.active;return p&&(a=`var(--pv-color-${e.color}-tint-1)`,t="var(--pv-color-gray-9)",o="var(--pv-color-gray-6)",i="var(--pv-color-gray-7)",n=`var(--pv-color-${e.color}-shade-3)`,l=m.switch.hover,d=m.switch.focus,c=m.switch.active),{"&:checked":{backgroundColor:a,"+ [aria-hidden]":{transform:"translateX(calc(50% - 2px))","&:before":{backgroundColor:`var(--pv-color-${e.color}-shade-2)`}}},"&:disabled":{cursor:"not-allowed",pointerEvents:"none",backgroundColor:"var(--pv-color-gray-4)","+ [aria-hidden]":{borderColor:o,backgroundColor:i},"&:checked":{backgroundColor:n}},"&:not(:disabled)":{cursor:"pointer","+ [aria-hidden]":{borderColor:t},"&:hover":{"+ [aria-hidden]:before":{opacity:l}},"&:focus-visible":{"+ [aria-hidden]:before":{opacity:d}},"&:active":{"+ [aria-hidden]:before":{opacity:c}}}}}),P=f(S)({display:"block",position:"absolute",width:"var(--pv-size-base-3)",height:"var(--pv-size-base-3)",transition:"transform 200ms",boxShadow:"var(--pv-shadow-light-low)",transform:"translateX(calc(-50% + 2px))",pointerEvents:"none",boxSizing:"content-box","&:before":{top:"-10px",left:"-10px",right:"-10px",bottom:"-10px",content:'""',position:"absolute",borderRadius:"50%",opacity:0,backgroundColor:"var(--pv-color-gray-9)",transition:"opacity 200ms, background-color 200ms"}}),r=C.forwardRef((e,p)=>{const{checked:a,defaultChecked:t,color:o="primary",required:i,inputProps:n,disabled:l,id:d,name:c,onChange:k,...w}=e,b=q(d);return u.jsxs(I,{ref:p,htmlFor:b,...w,children:[u.jsx(V,{...n,type:"checkbox",name:c,id:b,checked:a,defaultChecked:t,required:i,disabled:l,color:o,onChange:k}),u.jsx(P,{"aria-hidden":!0,background:`${o}-contrast`,borderWidth:1,borderStyle:"solid",borderRadius:100})]})});r.displayName="Switch";r.defaultProps={color:"primary"};try{r.displayName="Switch",r.__docgenInfo={description:"",displayName:"Switch",props:{checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"If `true`, the component is checked by default.",name:"defaultChecked",required:!1,type:{name:"boolean"}},color:{defaultValue:{value:"primary"},description:"The color of the component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},inputProps:{defaultValue:null,description:"Attributes applied to the input element.",name:"inputProps",required:!1,type:{name:'Omit<InputHTMLAttributes<HTMLInputElement>, "className" | "type">'}},className:{defaultValue:null,description:"The content of the component.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"If `true`, the Switch will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The `id` of the input element.",name:"id",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"If `true`, the `input` element will be required.",name:"required",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}}}}}catch{}const D={title:"Components/Switch",component:r,tags:["autodocs"],argTypes:{inputProps:{control:!1}}},s={};var v,y,g;s.parameters={...s.parameters,docs:{...(v=s.parameters)==null?void 0:v.docs,source:{originalSource:"{}",...(g=(y=s.parameters)==null?void 0:y.docs)==null?void 0:g.source}}};const H=["Playground"];export{s as Playground,H as __namedExportsOrder,D as default};
