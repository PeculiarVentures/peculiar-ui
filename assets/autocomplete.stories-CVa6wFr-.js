import{j as t}from"./jsx-runtime-xF634gn_.js";import{s as o}from"./emotion-styled.browser.esm-CnX2NPaZ.js";import{u as me}from"./use_autocomplete-DUL5feIF.js";import{e as j}from"./index-C-7etoUd.js";import{T as y}from"./typography-U7XEbHq-.js";import{C as ye}from"./close_small_icon-DVYxeH0C.js";import{P as he}from"./popper-O6M8mNeX.js";import{B as ge}from"./box-BYP7GzWl.js";import{A as ve}from"./arrow_drop_down_icon-KRxvEBvU.js";import{C as fe}from"./checkbox-D9Re98Sf.js";import{M as be}from"./menu_item-WshE2ykk.js";import{C as Te}from"./chip-CUo9k0I5.js";import"./emotion-element-f0de968e.browser.esm-DLlpVLeB.js";import"./use_id-Bg_loyUk.js";import"./use_controllable-DXs9Mygf.js";import"./use_enhanced_effect-B1RabiBj.js";import"./usePopper-CdO4NS3w.js";import"./index-dzNl0v_V.js";import"./index-DWe4bgYs.js";import"./portal-B1al-bvw.js";import"./check_icon-DiOFLOkP.js";import"./minus_icon-DkLRarBx.js";import"./opacity-DTkQBWRE.js";const xe=r=>{const a=j.useRef(null);return j.useEffect(()=>{const n=i=>{a.current&&!a.current.contains(i.target)&&r()};return document.addEventListener("click",n,!0),()=>{document.removeEventListener("click",n,!0)}},[a,r]),a},we=/^(as|size|disabled|isHasClearIcon)$/,Ce=o(ge,{shouldForwardProp:r=>!we.test(r)})({outline:"none",boxSizing:"border-box",width:"100%",borderRadius:"4px",backgroundColor:"var(--pv-color-gray-1)",borderStyle:"solid",borderWidth:"1px",transition:"background-color 200ms, color 200ms, border-color 200ms",appearance:"none",userSelect:"none",textAlign:"left",fontFamily:"inherit",position:"relative",display:"inline-flex",alignItems:"center",flexWrap:"wrap",gap:"var(--pv-size-base)",minHeight:"var(--pv-size-base-8)"},r=>{const a=r.isHasClearIcon?"48px":"24px";switch(r.size){case"small":return{minHeight:"var(--pv-size-base-6)",padding:`1px calc(var(--pv-size-base-2) + ${a}) 1px var(--pv-size-base-2)`};case"medium":return{minHeight:"var(--pv-size-base-7)",padding:`1px calc(var(--pv-size-base-2) + ${a}) 1px var(--pv-size-base-2)`};default:return{minHeight:"var(--pv-size-base-8)",padding:`3px calc(var(--pv-size-base-2) + ${a}) 3px var(--pv-size-base-2)`}}},r=>{const a=r.theme.mode==="dark",n=a?"var(--pv-color-white)":"var(--pv-color-black)";let i="var(--pv-color-gray-8)",u="var(--pv-color-gray-9)";const c="var(--pv-color-gray-10)";let h="var(--pv-color-gray-5)",g="var(--pv-color-gray-7)";const v="var(--pv-color-wrong)",m="var(--pv-color-secondary)";return a&&(i="var(--pv-color-gray-5)",u="var(--pv-color-gray-6)",h="var(--pv-color-gray-4)",g="var(--pv-color-gray-4)"),{borderColor:i,...r.disabled&&{cursor:"not-allowed",borderColor:h,color:g},...!r.disabled&&{color:n,cursor:"text","&:hover":{borderColor:c,'[aria-label="Clear"]':{visibility:"visible"}},"&[aria-placeholder]":{color:u},"&[aria-invalid]":{borderColor:v},"&:focus-visible":{borderColor:m,'[aria-label="Clear"]':{visibility:"visible"}},"&:focus-within":{borderColor:m,'[aria-label="Clear"]':{visibility:"visible"}}}}}),Ae=o("div")({position:"absolute",right:"0px",top:"calc(50% - 12px)",display:"flex",alignItems:"center",margin:"0px var(--pv-size-base)"}),ke=o("button")({color:"var(--pv-color-gray-10)",cursor:"pointer",visibility:"hidden",display:"inline-flex",appearance:"none",outline:"0px",padding:"0px",borderWidth:"0px",background:"transparent"}),Se=o(ve)({color:"var(--pv-color-gray-10)",'&[aria-disabled="true"]':{color:"inherit"}},r=>({...r.open&&{transform:"rotate(180deg)"}})),Ve=o("input")({bottom:0,left:0,height:"100%",position:"absolute",opacity:0,pointerEvents:"none",width:"100%",boxSizing:"border-box"}),z=o("div")({padding:"var(--pv-size-base-3) var(--pv-size-base-2)"}),Oe=o("ul")({maxHeight:"36vh",overflowY:"auto",margin:0,listStyleType:"none",position:"relative",padding:"10px 0"}),Ie=o(y)(r=>({padding:"var(--pv-size-base-2)",color:r.theme.mode==="dark"?"var(--pv-color-gray-6)":"var(--pv-color-gray-9)"})),qe=o("ul")({padding:0,listStyleType:"none"}),Pe=o(be)(r=>({...r.inGroup&&{padding:"0px var(--pv-size-base-2) 0 var(--pv-size-base-3)"}})),Ee=o(he)({minWidth:240,outline:0,borderRadius:"4px",minHeight:"16px",maxHeight:"calc(100% - 32px)",zIndex:1300},r=>{const a=r.theme.mode==="dark";let n="var(--pv-color-white)",i="var(--pv-shadow-light-low)";return a&&(n="var(--pv-color-gray-3)",i="var(--pv-shadow-dark-medium)"),{backgroundColor:n,boxShadow:i}}),Le=o(Te)({label:"Autocomplete-tag",borderRadius:"4px",height:"var(--pv-size-base-5)",margin:0,backgroundColor:"var(--pv-color-gray-2)",borderColor:"var(--pv-color-gray-5)",gap:"0px"}),Re=o(y)({margin:"0 var(--pv-size-base-2)"}),N=o(y)({fontFamily:"inherit",outline:"none",boxSizing:"border-box",minWidth:"30px",width:0,flexGrow:1,backgroundColor:"transparent",borderStyle:"none",appearance:"none"},r=>{const a=r.theme.mode==="dark",n=a?"var(--pv-color-white)":"var(--pv-color-black)";let i="var(--pv-color-gray-9)",u="var(--pv-color-gray-7)";return a&&(i="var(--pv-color-gray-6)",u="var(--pv-color-gray-4)"),{color:n,"&::placeholder":{color:i},"&:disabled":{cursor:"not-allowed",color:u}}}),De=o(y)({marginTop:"2px"}),je=o("label")({label:"TextField-label",marginBottom:"2px",display:"inline-block"}),w=r=>{const{className:a,size:n="medium",placeholder:i,label:u,disabled:c=!1,noOptionsText:h="No options",loading:g=!1,loadingText:v="Loading...",limitTags:m=-1,name:G,required:W=!1,multiple:S=!1,readOnly:f,error:V,errorText:O,renderRoot:H,renderOption:K,renderTag:U,getLimitTagsText:_=e=>`${e} more`,groupBy:I,onCreate:q,disableSearch:P=!1}=r,{id:$,value:d,searchValue:C,groupedOptions:T,getRootProps:J,getInputLabelProps:X,getInputProps:Y,getListboxProps:Q,getOptionProps:Z,getPopoverProps:ee,getTagProps:E,getOptionLabel:A,getClearProps:te}=me(r),L=Y(),re=J(),p=ee(),ae=e=>{q&&C.length&&q(e,C),p.onClose(e)},R=e=>{if(e.which!==229)switch(e.key){case"Tab":{p.open&&p.onClose(e);break}case"Escape":e.preventDefault(),p.onClose(e);break;case"Enter":e.preventDefault(),ae(e),p.onKeyDown(e);break;default:p.onKeyDown(e)}},oe=({key:e,...l},s)=>t.jsx(Pe,{...l,inGroup:!!I,startIcon:S?t.jsx(fe,{checked:l["aria-selected"],inputProps:{readOnly:!0}}):void 0,children:A(s)},e),le=e=>t.jsxs("li",{children:[t.jsx(Ie,{variant:"c1",color:"gray-10",children:e.group}),t.jsx(qe,{children:e.children})]},e.key),ne=U||(({key:e,...l},s)=>t.jsx(Le,{...l,color:"default",variant:"outlined",disabled:c,children:A(s)},e)),ie=(e,l)=>{const s=E(e,l);return ne(s,e)},k=(()=>{if(!d||Array.isArray(d)&&d.length===0)return null;if(Array.isArray(d)){const e=d.length>m&&m!==-1&&!p.open?d.length-m:0,l=e>0?d.slice(0,m):d;return t.jsxs(t.Fragment,{children:[l.map(ie),!!e&&t.jsx(Re,{variant:"c2",color:"gray-9",children:_(e)})]})}return A(d)})(),b=k===null,se=xe(p.onClose),de=({ref:e,...l},s)=>t.jsxs(Ce,{"aria-invalid":V||void 0,"aria-placeholder":b||void 0,size:n,disabled:c,ref:e,component:"label",isHasClearIcon:!b&&!f,children:[S?t.jsxs(t.Fragment,{children:[b?null:k,t.jsx(N,{...L,...l,noWrap:!0,component:"input",type:"text",variant:n==="small"?"c1":"b3",placeholder:i,readOnly:f||P,onKeyDown:R})]}):t.jsx(N,{...L,...l,noWrap:!0,component:"input",type:"text",value:C||k||"",variant:n==="small"?"c1":"b3",placeholder:i,readOnly:f||P,onKeyDown:R}),t.jsxs(Ae,{children:[!b&&!f?t.jsx(ke,{type:"button",disabled:c,title:"Clear","aria-label":"Clear",...te(),children:t.jsx(ye,{"aria-hidden":!0})}):null,t.jsx(Se,{role:"button",title:"Open","aria-label":"Open","aria-disabled":c,open:p.open})]}),t.jsx(Ve,{type:"text",value:b?"":JSON.stringify(s),tabIndex:-1,"aria-hidden":"true",disabled:c,autoComplete:"off",id:$,name:G,required:W,readOnly:f,onChange:()=>{}})]}),pe=K||oe,ue=H||de,D=(e,l)=>{const s=Z(e,l);return pe(s,e)};return t.jsxs("div",{className:a,children:[u&&t.jsx(je,{...X(),children:t.jsx(y,{component:"span",variant:"c2",color:"gray-10",children:u})}),ue({...re,disabled:c},d,E),V&&O&&t.jsx(De,{variant:"c2",color:"wrong",children:O}),t.jsx(Ee,{placement:"bottom-start",allowUseSameWidth:!0,...p,tabIndex:-1,children:t.jsxs("div",{ref:se,children:[g&&T.length===0&&t.jsx(z,{children:typeof v=="string"?t.jsx(y,{variant:"b2",color:"gray-10",children:v}):v}),T.length===0&&!g&&t.jsx(z,{children:typeof h=="string"?t.jsx(y,{variant:"b2",color:"gray-10",children:h}):h}),T.length>0&&t.jsx(Oe,{...Q(),children:T.map((e,l)=>I&&"options"in e?le({key:e.key,group:e.group,children:e.options.map((s,ce)=>D(s,e.index+ce))}):D(e,l))})]})})]})};w.displayName="Autocomplete";try{w.displayName="Autocomplete",w.__docgenInfo={description:"",displayName:"Autocomplete",props:{id:{defaultValue:null,description:`This prop is used to help implement the accessibility logic.
If you don't provide an id it will fall back to a randomly generated one.`,name:"id",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Array of options.",name:"options",required:!0,type:{name:"readonly T[]"}},defaultValue:{defaultValue:null,description:"The default value. Use when the component is not controlled.",name:"defaultValue",required:!1,type:{name:"TAutocompleteValue<T, Multiple>"}},value:{defaultValue:null,description:"The value of the select.",name:"value",required:!1,type:{name:"TAutocompleteValue<T, Multiple>"}},disableCloseOnSelect:{defaultValue:null,description:"If `true`, the popup won't close when a value is selected.",name:"disableCloseOnSelect",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"If `true`, `value` must be an array and the menu will support multiple selections.",name:"multiple",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:`It prevents the user from changing the value of
the field (not from interacting with the field).`,name:"readOnly",required:!1,type:{name:"boolean"}},popoverProps:{defaultValue:null,description:"Props applied to the `Popover` element.",name:"popoverProps",required:!1,type:{name:'Omit<HTMLAttributes<HTMLDivElement>, "children">'}},groupBy:{defaultValue:null,description:"If provided, the options will be grouped under the returned string.",name:"groupBy",required:!1,type:{name:"(option: T) => string"}},getOptionLabel:{defaultValue:null,description:"Used to determine the string value for a given option. It's used to fill the input.",name:"getOptionLabel",required:!1,type:{name:"(option: T) => string"}},getOptionKey:{defaultValue:null,description:"Used to determine the key value for a given option.",name:"getOptionKey",required:!1,type:{name:"(option: T) => string"}},filterOptions:{defaultValue:null,description:"A filter function that determines the options that are eligible.",name:"filterOptions",required:!1,type:{name:"TAutocompleteFilterOptionsType<T, Multiple>"}},isOptionEqualToValue:{defaultValue:null,description:`Used to determine if the option represents the given value. Uses strict equality by default.
⚠️ Both arguments need to be handled, an option can only match with one value.`,name:"isOptionEqualToValue",required:!1,type:{name:"(option: T, value: T) => boolean"}},onClose:{defaultValue:null,description:"Callback fired when the popup requests to be closed.",name:"onClose",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>) => void"}},onOpen:{defaultValue:null,description:"Callback fired when the popup requests to be opened.",name:"onOpen",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>) => void"}},onChange:{defaultValue:null,description:"Callback fired when the value changes.",name:"onChange",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, value: TAutocompleteValue<T, Multiple>, details: IAutocompleteChangeDetails<T>, reason: TAutocompleteChangeReason) => void"}},onInputChange:{defaultValue:null,description:"Callback fired when the input value changes.",name:"onInputChange",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, value: string) => void"}},className:{defaultValue:null,description:"The className of the component.",name:"className",required:!1,type:{name:"string"}},size:{defaultValue:{value:"'medium'"},description:"The size of the root component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},placeholder:{defaultValue:null,description:"The short hint displayed in the `input` before the user enters a value.",name:"placeholder",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"The label content.",name:"label",required:!1,type:{name:"string"}},noOptionsText:{defaultValue:{value:"'No options'"},description:"Text to display when there are no options.",name:"noOptionsText",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:{value:"false"},description:"If `true`, the component is in a loading state.\nThis shows the `loadingText` in place of suggestions (only if there are no\nsuggestions to show, e.g. `options` are empty).",name:"loading",required:!1,type:{name:"boolean"}},loadingText:{defaultValue:{value:"'Loading...'"},description:"Text to display when in a loading state.",name:"loadingText",required:!1,type:{name:"ReactNode"}},limitTags:{defaultValue:{value:"2"},description:"The maximum number of tags that will be visible when not focused.",name:"limitTags",required:!1,type:{name:"number"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the autocomplete will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},required:{defaultValue:{value:"false"},description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"If `true`, the `input` will indicate an error.",name:"error",required:!1,type:{name:"boolean"}},errorText:{defaultValue:null,description:"The content of the error message.",name:"errorText",required:!1,type:{name:"string"}},renderRoot:{defaultValue:null,description:"Render the root element.",name:"renderRoot",required:!1,type:{name:"(props: object, value: TAutocompleteValue<T, Multiple>, getTagProps: (option: T, index: number) => { key: number; 'data-tag-index': number; tabIndex: -1; onDelete?: (event: SyntheticEvent<...>) => void; }) => ReactNode"}},renderOption:{defaultValue:null,description:"Render the option, use `getOptionLabel` by default.",name:"renderOption",required:!1,type:{name:"(props: { key: string; tabIndex: number; role: string; id: string; 'data-option-index': number; 'aria-selected': boolean; onClick: (event: SyntheticEvent<Element, Event>) => void; }, option: T) => ReactNode"}},renderTag:{defaultValue:null,description:"Render the tags elements.",name:"renderTag",required:!1,type:{name:"(props: { key: number; 'data-tag-index': number; tabIndex: -1; onDelete?: (event: SyntheticEvent<Element, Event>) => void; }, option: T) => ReactNode"}},getLimitTagsText:{defaultValue:{value:"(more) => `${more} more`"},description:"The label to display when the tags are truncated (`limitTags`).",name:"getLimitTagsText",required:!1,type:{name:"(more: number) => string"}},onCreate:{defaultValue:null,description:"Callback fired when the create button clicked.",name:"onCreate",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, value: string) => void"}},disableSearch:{defaultValue:{value:"false"},description:"If `true`, the `input` element will be read only.",name:"disableSearch",required:!1,type:{name:"boolean"}}}}}catch{}const ze=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"Léon: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL·E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Amélie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],dt={title:"Components/Autocomplete",component:w,args:{options:ze,placeholder:"Select a movie",getOptionLabel:r=>r.title},tags:["autodocs"],argTypes:{options:{control:!1},getOptionLabel:{control:!1},defaultValue:{control:!1},value:{control:!1},filterOptions:{control:!1},popoverProps:{control:!1}}},x={};var B,F,M;x.parameters={...x.parameters,docs:{...(B=x.parameters)==null?void 0:B.docs,source:{originalSource:"{}",...(M=(F=x.parameters)==null?void 0:F.docs)==null?void 0:M.source}}};const pt=["Playground"];export{x as Playground,pt as __namedExportsOrder,dt as default};
