import{j as l}from"./jsx-runtime-DtaoT6pD.js";import{n as d}from"./emotion-styled.browser.esm-jsqElTi7.js";import{T as q}from"./typography-be8ycqzM.js";import{A as pe}from"./arrow_drop_down_icon-3Bz4V8YA.js";import{M as ce}from"./menu_item-HckMG_6t.js";import{P as he}from"./popover-5ca7qWOE.js";import{C as me}from"./chip-JiwRkfVy.js";import{T as ye}from"./text_field-U_MB4Wg6.js";import{B as fe}from"./button-6fPk4QP_.js";import{R as O}from"./index-OjgoNOWw.js";import{u as ge}from"./use_id-vDNgflVU.js";import{u as ve}from"./use_controllable-CY5ZQbVr.js";import{u as be}from"./use_enhanced_effect-jDxBKzmp.js";import{B as ne}from"./box-prmQx5g4.js";import{P as xe}from"./plus_icon-u0qdKX2a.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-xK8HOd_o.js";import"./emotion-element-c39617d8.browser.esm-upVMHClS.js";import"./usePopper--g5aU53a.js";import"./index-mQqIOHEI.js";import"./modal-tLYruSll.js";import"./portal-GS-MOYPJ.js";import"./fade-6tFb4vlS.js";import"./use_merged_ref-U30BPCzO.js";import"./Transition-ZSq31Zhi.js";import"./inheritsLoose-Y9jOMJLd.js";import"./close_small_icon-bQ1Dr2hp.js";import"./button_base-UbkVh8Vj.js";function le(a){const m=O.useRef(a);return be(()=>{m.current=a}),O.useCallback((...v)=>(0,m.current)(...v),[])}const Te=(a,m,v,A)=>!a||!a.length?[]:a.filter(T=>A(T).trim().toLowerCase().includes(m.trim().toLowerCase()));function Ce(a){const{id:m,options:v,defaultValue:A=a.multiple?[]:null,value:T,disableCloseOnSelect:I=!1,multiple:b=!1,readOnly:C,popoverProps:w,groupBy:y,getOptionLabel:f=e=>e.label??e,getOptionKey:S,filterOptions:J=Te,onOpen:F,onClose:G,onInputChange:R,onChange:H}=a,g=ge(m),z=O.useRef(null),V=O.useRef(null),x=O.useRef(-1),[h,j]=O.useState(!1),[k,N]=O.useState(""),[n,X]=ve({value:T,defaultValue:A}),s=h?J(v,k,n,f):[],Y=(e,t)=>{if(!V.current||e===-1)return-1;let o=e;for(;;){if(t==="next"&&o===s.length||t==="previous"&&o===-1)return-1;const u=V.current.querySelector(`[data-option-index="${o}"]`);if(u&&!u.hasAttribute("tabindex"))o+=t==="next"?1:-1;else return o}},P=le((e,t="auto")=>{x.current=e;const o=V.current;if(!o)return;const u=o.querySelector('[role="option"][data-focused="true"]');if(u&&u.setAttribute("data-focused","false"),e===-1){o.scrollTop=0;return}const p=o.querySelector(`[data-option-index="${e}"]`);if(p&&(p.setAttribute("data-focused","true"),o.scrollHeight>o.clientHeight&&t!=="mouse")){const i=p,r=o.clientHeight+o.scrollTop,c=i.offsetTop+i.offsetHeight;c>r?o.scrollTop=c-o.clientHeight:i.offsetTop-i.offsetHeight*(y?1.3:0)<o.scrollTop&&(o.scrollTop=i.offsetTop-i.offsetHeight*(y?1.3:0))}}),L=le((e,t="next",o="auto")=>{if(!h)return;const p=Y((()=>{const i=s.length-1;if(e==="reset")return-1;if(e==="start")return 0;if(e==="end")return i;const r=x.current+e;return r<0?r===-1?-1:x.current!==-1||Math.abs(e)>1?0:i:r>i?r===i+1?-1:Math.abs(e)>1?i:0:r})(),t);P(p,o)}),B=O.useCallback(()=>{if(!h)return;const e=Array.isArray(n)?n[0]:n;if(s.length===0||e==null){L("reset");return}if(V.current){if(e!=null){const t=s.findIndex(o=>o===e);t===-1?L("reset"):P(t);return}if(x.current>=s.length-1){P(s.length-1);return}P(x.current)}},[s.length,b?!1:n,L,P,h,k,b]),Q=le(e=>{V.current=e,e&&B()});O.useEffect(()=>{B()},[B]);const Z=e=>{h||(j(!0),F&&F(e))},W=e=>{C||Z(e)},E=e=>{h&&(j(!1),N(""),G&&G(e))},M=(e,t,o,u)=>{let p=t,i=u;if(b){p=Array.isArray(n)?n.slice():[];const r=p.findIndex(c=>t===c);r===-1?p.push(t):(p.splice(r,1),i="removeOption")}X(p),I||E(e),H&&H(e,p,{option:t,index:o},i)},K=e=>{const{value:t}=e.target;N(t),R&&R(e,t)},$=e=>{N(""),R&&R(e,"")},ee=e=>{if(e.which!==229)switch(e.key){case"ArrowDown":e.preventDefault(),L(1,"next","keyboard");break;case"ArrowUp":e.preventDefault(),L(-1,"previous","keyboard");break;case"Enter":if(e.preventDefault(),x.current!==-1&&h){const t=s[x.current];M(e,t,x.current,"selectOption")}break}},te=e=>{const t=Number(e.currentTarget.getAttribute("data-option-index")),o=s[t];M(e,o,t,"selectOption")},re=(e,t)=>o=>{M(o,e,t,"removeOption")};let oe=s;return y&&(oe=s.reduce((e,t,o)=>{const u=y(t);return e.length>0&&e[e.length-1].group===u?e[e.length-1].options.push(t):e.push({key:o,index:o,group:u,options:[t]}),e},[])),{getRootProps:()=>({ref:z,"aria-expanded":h,"aria-autocomplete":"list","aria-controls":`${g}-listbox`,id:`${g}-toggle-button`,role:"combobox",onClick:W}),getInputLabelProps:()=>({id:`${g}-label`,htmlFor:`${g}-toggle-button`}),getListboxProps:()=>({ref:Q,role:"listbox",tabIndex:-1,id:`${g}-listbox`}),getInputProps:()=>({id:`${g}-input`,type:"search",value:k,autoComplete:"off",autoCapitalize:"none",autoCorrect:"false",spellCheck:"false",onChange:K}),getClearProps:()=>({tabIndex:-1,onClick:$}),getOptionProps:(e,t)=>{const o=(Array.isArray(n)?n:[n]).some(u=>u!=null&&e===u);return{key:S?S(e):f(e),tabIndex:-1,role:"option",id:`${g}-option-${t}`,"data-option-index":t,"aria-selected":o,onClick:te}},getPopoverProps:()=>({...w,open:h,anchorEl:z.current,onClose:E,onKeyDown:ee}),getTagProps:(e,t)=>({key:t,"data-tag-index":t,tabIndex:-1,onDelete:C?void 0:re(e,t)}),getOptionLabel:f,groupedOptions:oe,popupOpen:h,value:n,searchValue:k,id:g}}const we=d(q)(a=>({outline:"none",boxSizing:"border-box",width:"100%",borderRadius:"4px",padding:"0 calc(var(--pv-size-base-2) + 24px) 0 var(--pv-size-base-2)",backgroundColor:"var(--pv-color-gray-1)",borderStyle:"solid",borderWidth:"1px",transition:"background-color 200ms, color 200ms, border-color 200ms",appearance:"none",userSelect:"none",textAlign:"left",cursor:"pointer",fontFamily:"inherit",height:"var(--pv-size-base-8)",position:"relative",...a.size==="small"&&{height:"var(--pv-size-base-6)"},...a.size==="medium"&&{height:"var(--pv-size-base-7)"},...a.multiple===!0&&{display:"inline-flex",alignItems:"center"}}),a=>{const m=a.theme.mode==="dark",v=m?"var(--pv-color-white)":"var(--pv-color-black)";let A="var(--pv-color-gray-8)",T="var(--pv-color-gray-9)",I="var(--pv-color-gray-7)",b="var(--pv-color-gray-5)",C="var(--pv-color-gray-7)",w="var(--pv-color-wrong-tint-5)",y="var(--pv-color-wrong-tint-3)",f="var(--pv-color-secondary-tint-5)",S="var(--pv-color-secondary-tint-3)";return m&&(A="var(--pv-color-gray-5)",T="var(--pv-color-gray-6)",I="var(--pv-color-gray-4)",b="var(--pv-color-gray-4)",C="var(--pv-color-gray-4)",w="var(--pv-color-wrong-shade-4)",y="var(--pv-color-wrong-shade-1)",f="var(--pv-color-secondary-shade-4)",S="var(--pv-color-secondary-shade-1)"),{borderColor:A,"&:hover":{backgroundColor:"var(--pv-color-gray-3)",borderColor:I},"&:disabled":{cursor:"not-allowed",backgroundColor:"var(--pv-color-gray-1)",borderColor:b,color:C},"&:not(:disabled)":{color:v,"&[aria-placeholder]":{color:T},"&[aria-invalid]":{backgroundColor:w,borderColor:y},"&:focus-visible":{backgroundColor:f,borderColor:S}}}}),Oe=d(pe)({position:"absolute",right:"0px",top:"calc(50% - 12px)",margin:"0px var(--pv-size-base)",color:"var(--pv-color-gray-10)",'&[aria-disabled="true"]':{color:"inherit"}}),Ae=d("input")({bottom:0,left:0,height:"100%",position:"absolute",opacity:0,pointerEvents:"none",width:"100%",boxSizing:"border-box"}),ie=d("div")({padding:"var(--pv-size-base-3) var(--pv-size-base-2)"}),Ie=d("ul")({maxHeight:"36vh",overflowY:"auto",margin:0,listStyleType:"none",position:"relative",padding:"10px 0"}),Se=d(q)(a=>({padding:"var(--pv-size-base-2)",color:a.theme.mode==="dark"?"var(--pv-color-gray-6)":"var(--pv-color-gray-9)"})),Ve=d("ul")({padding:0,listStyleType:"none"}),ke=d(ce)(a=>({...a.inGroup&&{padding:"0px var(--pv-size-base-2) 0 var(--pv-size-base-3)"}})),Pe=d(he)({minWidth:240}),Le=d("div")({overflow:"hidden",width:"100%"}),qe=d(me)(a=>({label:"Autocomplete-tag",borderRadius:"3px",margin:"0 var(--pv-size-base) 0 0",...a.tagsLength===1&&{maxWidth:"calc(100% - var(--pv-size-base))"},...a.tagsLength>1&&a.limitTags&&{maxWidth:`calc(${100/a.limitTags}% - var(--pv-size-base))`},...a.size==="small"&&{height:"var(--pv-size-base-5)"}})),Re=d(q)({margin:"0 var(--pv-size-base-2)"}),Ee=d(ye)({padding:"var(--pv-size-base-3) var(--pv-size-base-3) var(--pv-size-base-2)"}),De=d(fe)({width:"100%",borderRadius:0,justifyContent:"left",padding:"0px var(--pv-size-base-2)"}),ze=d(q)({marginTop:"2px"}),je=d("label")({label:"TextField-label",marginBottom:"2px",display:"inline-block"}),U=a=>{const{className:m,size:v,placeholder:A,label:T,disableSearch:I,disabled:b=!1,noOptionsText:C,loading:w,loadingText:y,limitTags:f=2,name:S,required:J,multiple:F=!1,readOnly:G,createOptionText:R,allowCreateOption:H,error:g,errorText:z,renderRoot:V,renderOption:x,getLimitTagsText:h=r=>`${r} more`,groupBy:j,onCreate:k}=a,{id:N,value:n,searchValue:X,groupedOptions:s,getRootProps:Y,getInputLabelProps:P,getInputProps:L,getListboxProps:B,getOptionProps:Q,getPopoverProps:Z,getTagProps:W,getOptionLabel:E}=Ce(a),{onChange:M,...K}=L(),$=Z(),ee=r=>{k&&k(r,X),$.onClose(r)},te=(r,c)=>l.jsx(ke,{...r,inGroup:!!j,children:E(c)}),re=r=>l.jsxs("li",{children:[l.jsx(Se,{variant:"c1",color:"gray-10",children:r.group}),l.jsx(Ve,{children:r.children})]},r.key),e=(()=>{if(!n||Array.isArray(n)&&n.length===0)return null;if(Array.isArray(n)){const r=n.length>f?n.length-f:0,c=r>0?n.slice(0,f):n;return l.jsxs(l.Fragment,{children:[l.jsx(Le,{children:c.map((D,ae)=>l.jsx(qe,{...W(D,ae),color:"secondary",variant:"contained",size:v,limitTags:f,tagsLength:n.length,children:E(D)}))}),!!r&&l.jsx(Re,{variant:"c2",color:"gray-9",children:h(r)})]})}return E(n)})(),t=e===null,o=(r,c)=>l.jsxs(we,{...r,noWrap:!0,component:"button",type:"button",variant:v==="small"?"c1":"b3","aria-invalid":g||void 0,"aria-placeholder":t||void 0,multiple:F,size:v,children:[t?A:e,l.jsx(Oe,{"aria-disabled":b,"aria-hidden":!0}),l.jsx(Ae,{type:"text",value:t?"":JSON.stringify(c),tabIndex:-1,"aria-hidden":"true",disabled:b,autoComplete:"off",id:N,name:S,required:J,readOnly:G,onChange:()=>{}})]}),u=x||te,p=V||o,i=(r,c)=>{const D=Q(r,c);return u(D,r)};return l.jsxs("div",{className:m,children:[T&&l.jsx(je,{...P(),children:l.jsx(q,{component:"span",variant:"c2",color:"gray-10",children:T})}),p({...Y(),disabled:b},n,W),g&&z&&l.jsx(ze,{variant:"c2",color:"wrong",children:z}),l.jsxs(Pe,{placement:"bottom-start",allowUseSameWidth:!0,...$,children:[!I&&l.jsx(ne,{borderColor:"gray-3",borderPosition:"bottom",borderStyle:"solid",borderWidth:1,children:l.jsx(Ee,{id:K.id,inputProps:K,onChange:M,placeholder:"Search",disabled:w})}),w&&s.length===0&&l.jsx(ie,{children:typeof y=="string"?l.jsx(q,{variant:"b2",color:"gray-10",children:y}):y}),s.length===0&&!w&&l.jsx(ie,{children:typeof C=="string"?l.jsx(q,{variant:"b2",color:"gray-10",children:C}):C}),s.length>0&&l.jsx(Ie,{...B(),children:s.map((r,c)=>j&&"options"in r?re({key:r.key,group:r.group,children:r.options.map((D,ae)=>i(D,r.index+ae))}):i(r,c))}),H&&!w&&l.jsx(ne,{borderColor:"gray-3",borderPosition:"top",borderStyle:"solid",borderWidth:1,children:l.jsx(De,{color:"secondary",textVariant:"b3",onClick:ee,startIcon:l.jsx(xe,{}),children:R})})]})]})};U.defaultProps={disableSearch:!1,noOptionsText:"No options",loading:!1,loadingText:"Loading...",limitTags:2,required:!1,allowCreateOption:!1,createOptionText:"Create new",size:"medium"};try{U.displayName="Autocomplete",U.__docgenInfo={description:"",displayName:"Autocomplete",props:{id:{defaultValue:null,description:`This prop is used to help implement the accessibility logic.
If you don't provide an id it will fall back to a randomly generated one.`,name:"id",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Array of options.",name:"options",required:!0,type:{name:"readonly T[]"}},defaultValue:{defaultValue:null,description:"The default value. Use when the component is not controlled.",name:"defaultValue",required:!1,type:{name:"AutocompleteValue<T, Multiple>"}},value:{defaultValue:null,description:"The value of the select.",name:"value",required:!1,type:{name:"AutocompleteValue<T, Multiple>"}},disableCloseOnSelect:{defaultValue:null,description:"If `true`, the popup won't close when a value is selected.",name:"disableCloseOnSelect",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"If `true`, `value` must be an array and the menu will support multiple selections.",name:"multiple",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:`It prevents the user from changing the value of
the field (not from interacting with the field).`,name:"readOnly",required:!1,type:{name:"boolean"}},popoverProps:{defaultValue:null,description:"Props applied to the `Popover` element.",name:"popoverProps",required:!1,type:{name:'Omit<HTMLAttributes<HTMLDivElement>, "children">'}},groupBy:{defaultValue:null,description:"If provided, the options will be grouped under the returned string.",name:"groupBy",required:!1,type:{name:"(option: T) => string"}},getOptionLabel:{defaultValue:null,description:"Used to determine the string value for a given option. It's used to fill the input.",name:"getOptionLabel",required:!1,type:{name:"(option: T) => string"}},getOptionKey:{defaultValue:null,description:"Used to determine the key value for a given option.",name:"getOptionKey",required:!1,type:{name:"(option: T) => string"}},filterOptions:{defaultValue:null,description:"A filter function that determines the options that are eligible.",name:"filterOptions",required:!1,type:{name:"AutocompleteFilterOptionsType<T, Multiple>"}},onClose:{defaultValue:null,description:"Callback fired when the popup requests to be closed.",name:"onClose",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>) => void"}},onOpen:{defaultValue:null,description:"Callback fired when the popup requests to be opened.",name:"onOpen",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>) => void"}},onChange:{defaultValue:null,description:"Callback fired when the value changes.",name:"onChange",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, value: AutocompleteValue<T, Multiple>, details: AutocompleteChangeDetails<T>, reason: AutocompleteChangeReason) => void"}},onInputChange:{defaultValue:null,description:"Callback fired when the input value changes.",name:"onInputChange",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, value: string) => void"}},className:{defaultValue:null,description:"The className of the component.",name:"className",required:!1,type:{name:"string"}},size:{defaultValue:{value:"medium"},description:"The size of the root component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},placeholder:{defaultValue:null,description:"The short hint displayed in the `input` before the user enters a value.",name:"placeholder",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"The label content.",name:"label",required:!1,type:{name:"string"}},noOptionsText:{defaultValue:{value:"No options"},description:"Text to display when there are no options.",name:"noOptionsText",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:{value:"false"},description:"If `true`, the component is in a loading state.\nThis shows the `loadingText` in place of suggestions (only if there are no\nsuggestions to show, e.g. `options` are empty).",name:"loading",required:!1,type:{name:"boolean"}},loadingText:{defaultValue:{value:"Loading..."},description:"Text to display when in a loading state.",name:"loadingText",required:!1,type:{name:"ReactNode"}},limitTags:{defaultValue:{value:"2"},description:"The maximum number of tags that will be visible when not focused.",name:"limitTags",required:!1,type:{name:"number"}},disableSearch:{defaultValue:{value:"false"},description:"If `true`, the popup search input will be hidden.",name:"disableSearch",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"If `true`, the autocomplete will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},required:{defaultValue:{value:"false"},description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},createOptionText:{defaultValue:{value:"Create new"},description:"Text to display when in the create button element.",name:"createOptionText",required:!1,type:{name:"string"}},allowCreateOption:{defaultValue:{value:"false"},description:"If `true`, the create button element will be shown.",name:"allowCreateOption",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"If `true`, the `input` will indicate an error.",name:"error",required:!1,type:{name:"boolean"}},errorText:{defaultValue:null,description:"",name:"errorText",required:!1,type:{name:"string"}},renderRoot:{defaultValue:null,description:"Render the root element.",name:"renderRoot",required:!1,type:{name:"(props: object, value: AutocompleteValue<T, Multiple>, getTagProps: (option: T, index: number) => { key: number; 'data-tag-index': number; tabIndex: -1; onDelete?: (event: SyntheticEvent<...>) => void; }) => ReactNode"}},renderOption:{defaultValue:null,description:"Render the option, use `getOptionLabel` by default.",name:"renderOption",required:!1,type:{name:"(props: object, option: T) => ReactNode"}},getLimitTagsText:{defaultValue:null,description:"The label to display when the tags are truncated (`limitTags`).",name:"getLimitTagsText",required:!1,type:{name:"(more: number) => string"}},onCreate:{defaultValue:null,description:"Callback fired when the create button clicked.",name:"onCreate",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, value: string) => void"}}}}}catch{}const Ne=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"Léon: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL·E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Amélie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}],ct={title:"Components/Autocomplete",component:U,args:{options:Ne,placeholder:"Select a movie",getOptionLabel:a=>a.title},tags:["autodocs"],argTypes:{options:{control:!1},getOptionLabel:{control:!1},defaultValue:{control:!1},value:{control:!1},filterOptions:{control:!1},popoverProps:{control:!1}}},_={};var se,ue,de;_.parameters={..._.parameters,docs:{...(se=_.parameters)==null?void 0:se.docs,source:{originalSource:"{}",...(de=(ue=_.parameters)==null?void 0:ue.docs)==null?void 0:de.source}}};const ht=["Playground"];export{_ as Playground,ht as __namedExportsOrder,ct as default};
