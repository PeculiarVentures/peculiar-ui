import{j as a}from"./jsx-runtime-xF634gn_.js";import{r as P}from"./index-C-7etoUd.js";import{s as f}from"./emotion-styled.browser.esm-CnX2NPaZ.js";import{u as _}from"./use_id-Bg_loyUk.js";import{T as v}from"./typography-BPMyf_HL.js";import"./emotion-element-f0de968e.browser.esm-DLlpVLeB.js";const H=f(v)(e=>({fontFamily:"inherit",outline:"none",boxSizing:"border-box",width:"100%",borderRadius:"4px",padding:"var(--pv-size-base) var(--pv-size-base-2)",backgroundColor:"var(--pv-color-gray-1)",borderStyle:"solid",borderWidth:"1px",transition:"background-color 200ms, color 200ms, border-color 200ms",display:"block",appearance:"none",resize:"none",...e.size==="small"&&{minHeight:"var(--pv-size-base-12)"},...e.size==="medium"&&{minHeight:"var(--pv-size-base-14)"},...e.size==="large"&&{minHeight:"var(--pv-size-base-16)"}}),e=>{const l=e.theme.mode==="dark",o=l?"var(--pv-color-white)":"var(--pv-color-black)";let r="var(--pv-color-gray-8)",t="var(--pv-color-gray-9)";const p="var(--pv-color-gray-10)";let n="var(--pv-color-gray-5)",i="var(--pv-color-gray-7)";const c="var(--pv-color-wrong)",m="var(--pv-color-secondary)";return l&&(r="var(--pv-color-gray-5)",t="var(--pv-color-gray-6)",n="var(--pv-color-gray-4)",i="var(--pv-color-gray-4)"),{color:o,borderColor:r,"&::placeholder":{color:t},"&:hover":{borderColor:p},"&:disabled":{cursor:"not-allowed",borderColor:n,color:i},"&:not(:disabled)":{"&[aria-invalid]":{borderColor:c},"&:focus-visible":{borderColor:m}}}}),k=f("label")({marginBottom:"2px",display:"inline-block"}),E=f(v)({marginTop:"2px"}),u=P.forwardRef((e,l)=>{const{size:o="medium",label:r,inputProps:t={},disabled:p=!1,defaultValue:n,id:i,value:c,placeholder:m,required:T,name:q,inputRef:V,error:h,errorText:b,autoFocus:C,readOnly:z,onChange:F,...w}=e,d=_(i),I=r&&d?`${d}-label`:void 0;return a.jsxs("div",{ref:l,...w,children:[r&&a.jsx(k,{htmlFor:d,id:I,children:a.jsx(v,{component:"span",variant:"c2",color:"gray-10",children:r})}),a.jsx(H,{...t,component:"textarea",variant:o==="small"?"c1":"b3",size:o,disabled:p,defaultValue:n,id:d,value:c,required:T,autoFocus:C,placeholder:m,readOnly:z,name:q,ref:V,"aria-invalid":h||void 0,onChange:F}),h&&b&&a.jsx(E,{variant:"c2",color:"wrong",children:b})]})});u.displayName="TextareaField";try{u.displayName="TextareaField",u.__docgenInfo={description:"",displayName:"TextareaField",props:{disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'medium'"},description:"The size of the input.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},className:{defaultValue:null,description:"The className of the component.",name:"className",required:!1,type:{name:"string"}},inputProps:{defaultValue:null,description:"Attributes applied to the `input` element.",name:"inputProps",required:!1,type:{name:'Omit<InputHTMLAttributes<HTMLTextAreaElement>, "size">'}},defaultValue:{defaultValue:null,description:"The default value. Use when the component is not controlled.",name:"defaultValue",required:!1,type:{name:"string | (string & readonly string[])"}},id:{defaultValue:null,description:"The id of the `input` element.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"The label content.",name:"label",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The value of the `input` element, required for a controlled component.",name:"value",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"The short hint displayed in the `input` before the user enters a value.",name:"placeholder",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.",name:"inputRef",required:!1,type:{name:"ForwardedRef<HTMLTextAreaElement>"}},autoFocus:{defaultValue:null,description:"If `true`, the `input` element is focused during the first mount.",name:"autoFocus",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"If `true`, the `input` will indicate an error.",name:"error",required:!1,type:{name:"boolean"}},errorText:{defaultValue:null,description:"",name:"errorText",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:`It prevents the user from changing the value of
the field (not from interacting with the field).`,name:"readOnly",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Callback fired when the value is changed.",name:"onChange",required:!1,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}}}}}catch{}const M={title:"Components/TextareaField",component:u,tags:["autodocs"],args:{placeholder:"Placeholder"},argTypes:{inputProps:{control:!1},inputRef:{control:!1},onChange:{control:!1}}},s={};var g,y,x;s.parameters={...s.parameters,docs:{...(g=s.parameters)==null?void 0:g.docs,source:{originalSource:"{}",...(x=(y=s.parameters)==null?void 0:y.docs)==null?void 0:x.source}}};const D=["Playground"];export{s as Playground,D as __namedExportsOrder,M as default};
