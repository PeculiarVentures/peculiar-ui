// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextField /> TextField change behaviour should calls onChange after user input 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField focus behaviour should have focus 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField focus behaviour should have focus when autoFocus has been passed to the component 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField focus behaviour shouldn't have focus when disabled & autoFocus has been passed to the component 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      disabled=""
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField focus behaviour shouldn't have focus when disabled has been passed to the component 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      disabled=""
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField keyboard behaviour should have correct value after user input 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField keyboard behaviour shouldn't change value after user input when readOnly has been passed to the component 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      readonly=""
      type="text"
      value="test"
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render sizes should render a large size 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-8);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render sizes should render a medium size 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render sizes should render a small size 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-c1-weight);
  font-size: var(--pv-text-c1-size);
  line-height: var(--pv-text-c1-height);
  letter-spacing: var(--pv-text-c1-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-6);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should be disabled 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      disabled=""
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should forwards ref to div element 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should forwards ref to input element 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should have className 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div
    class="test-cls"
  >
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should have defaultValue 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value="test-value"
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should have error alert 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

.emotion-1 {
  margin: 0;
  font-weight: var(--pv-text-c2-weight);
  font-size: var(--pv-text-c2-size);
  line-height: var(--pv-text-c2-height);
  letter-spacing: var(--pv-text-c2-spacing);
  color: var(--pv-color-wrong);
  margin-top: 2px;
}

<div>
    <input
      aria-invalid="true"
      class="emotion-0"
      type="text"
      value=""
    />
    <p
      class="emotion-1"
    >
      Error message
    </p>
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should have id 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      id="test-id"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should have label 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin-bottom: 2px;
  display: inline-block;
}

.emotion-1 {
  margin: 0;
  font-weight: var(--pv-text-c2-weight);
  font-size: var(--pv-text-c2-size);
  line-height: var(--pv-text-c2-height);
  letter-spacing: var(--pv-text-c2-spacing);
  color: var(--pv-color-gray-10);
}

.emotion-2 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-2::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-2::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-2:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-2::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-2:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-2:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-2:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-2:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <label
      class="emotion-0"
    >
      <span
        class="emotion-1"
      >
        Test label
      </span>
    </label>
    <input
      class="emotion-2"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should have name attr 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      name="test-name"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should have placeholder 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      placeholder="test-placeholder"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should have required 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      required=""
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should have test id 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div
    data-testid="test-id"
  >
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should have value 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value="test-value"
    />
  </div>
</DocumentFragment>
`;

exports[`<TextField /> TextField render variants should render as default 1`] = `
<DocumentFragment>
  .emotion-0 {
  margin: 0;
  font-weight: var(--pv-text-b3-weight);
  font-size: var(--pv-text-b3-size);
  line-height: var(--pv-text-b3-height);
  letter-spacing: var(--pv-text-b3-spacing);
  color: var(--pv-color-black);
  font-family: inherit;
  outline: none;
  box-sizing: border-box;
  width: 100%;
  border-radius: 4px;
  padding: 0 var(--pv-size-base-2);
  background-color: var(--pv-color-gray-1);
  border-style: solid;
  border-width: 1px;
  border-color: var(--pv-color-gray-8);
  -webkit-transition: background-color 200ms,color 200ms,border-color 200ms;
  transition: background-color 200ms,color 200ms,border-color 200ms;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  height: var(--pv-size-base-7);
}

.emotion-0::-webkit-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::-moz-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:-ms-input-placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0::placeholder {
  color: var(--pv-color-gray-9);
}

.emotion-0:hover {
  background-color: var(--pv-color-gray-3);
  border-color: var(--pv-color-gray-7);
}

.emotion-0:disabled {
  cursor: not-allowed;
  background-color: var(--pv-color-gray-1);
  border-color: var(--pv-color-gray-5);
  color: var(--pv-color-gray-7);
}

.emotion-0:not(:disabled)[aria-invalid] {
  background-color: var(--pv-color-wrong-tint-5);
  border-color: var(--pv-color-wrong-tint-3);
}

.emotion-0:not(:disabled):focus {
  background-color: var(--pv-color-secondary-tint-5);
  border-color: var(--pv-color-secondary-tint-3);
}

<div>
    <input
      class="emotion-0"
      type="text"
      value=""
    />
  </div>
</DocumentFragment>
`;
